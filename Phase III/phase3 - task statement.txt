---
--- create database tables
---

CREATE TABLE User(
	Username 		varchar(50),
	Password 		CHAR(32) NOT NULL,  -- <====(Can be INT, CHAR, VARCHAR, or BLOB)
	IsAdmin 		boolean NOT NULL,
	PRIMARY KEY (Username)
) ENGINE=InnoDB;

CREATE TABLE Passenger(
	Username 		varchar(50),
	Email 			varchar(50) NOT NULL,
	PRIMARY KEY (Username),  -- <====(Can be Email also, username is better though)
	UNIQUE (Email),
	FOREIGN KEY (Username) REFERENCES User(Username)
		ON DELETE CASCADE ON UPDATE CASCADE
) ENGINE=InnoDB;

CREATE TABLE Breezecard(
	BreezecardNum 	char(16),
	Value 			decimal(6,2) NOT NULL,
	BelongsTo		varchar(50),
	PRIMARY KEY (BreezecardNum),
	FOREIGN KEY (BelongsTo) REFERENCES Passenger(Username) -- <====(Can also reference Email)
		ON DELETE SET NULL ON UPDATE CASCADE, -- <== Must be SET NULL
	CHECK (Value >= 0.00 AND Value <= 1000.00)
) ENGINE=InnoDB;

CREATE TABLE Conflict(
	Username 		varchar(50), -- <====(Can also be Email, although username is better)
	BreezecardNum 	char(16),
	DateTime 		timestamp NOT NULL,
	CONSTRAINT Pk_Conflict PRIMARY KEY (Username, BreezecardNum),
	FOREIGN KEY (Username) REFERENCES Passenger(Username)  -- <====(Can also reference Email)
		ON DELETE CASCADE ON UPDATE CASCADE,
	FOREIGN KEY (BreezecardNum) REFERENCES Breezecard(BreezecardNum)
		ON DELETE CASCADE ON UPDATE CASCADE
) ENGINE=InnoDB;

CREATE TABLE Station(
	StopID 			varchar(50),
	Name 			varchar(50) NOT NULL,
	EnterFare 		decimal(4,2) NOT NULL,
	ClosedStatus 	boolean NOT NULL,
	IsTrain 		boolean NOT NULL,
	PRIMARY KEY (StopID),
	UNIQUE (Name, IsTrain),
	CHECK (EnterFare >= 0.00 AND EnterFare <= 50.00)
) ENGINE=InnoDB;

CREATE TABLE Trip(
	Tripfare 		decimal(4,2) NOT NULL,
	StartTime 		timestamp,
	BreezecardNum 	char(16),
	StartsAt 		varchar(50) NOT NULL,
	EndsAt 			varchar(50),
	CONSTRAINT Pk_Trip PRIMARY KEY (StartTime, BreezecardNum),
	FOREIGN KEY (BreezecardNum) REFERENCES Breezecard(BreezecardNum)
		ON DELETE CASCADE ON UPDATE CASCADE,
	FOREIGN KEY (StartsAt) REFERENCES Station(StopID)
		ON DELETE RESTRICT ON UPDATE CASCADE,
	FOREIGN KEY (EndsAt) REFERENCES Station(StopID)
		ON DELETE RESTRICT ON UPDATE CASCADE     -- <===(ON DELETE SET NULL ok too)
) ENGINE=InnoDB;

CREATE TABLE BusStationIntersection(
	StopID 			varchar(50),
	Intersection 	varchar(255), -- <====(OK to be NOT NULL)
	PRIMARY KEY (StopID),
	FOREIGN KEY (StopID) REFERENCES Station(StopID)
		ON DELETE CASCADE ON UPDATE CASCADE
) ENGINE=InnoDB;



-----------------------
--- task statements ---
-----------------------

---
--- determine if user is an administrator
---
SELECT IsAdmin FROM User WHERE Username = '%s'

---
--- login
---
SELECT * FROM User WHERE Username = '%s'AND Password = '%s'
-- check if this user is an admin
SELECT IsAdmin FROM User WHERE Username = '%s'

---
--- check if breezecard exist
---
SELECT * FROM Breezecard WHERE breezecardNum = '%s'

---
--- get breezecard's information
---
-- all
SELECT * FROM Breezecard ORDER BY BreezecardNum ASC
-- by bcNun
SELECT * FROM Breezecard WHERE BreezecardNum = '%s' ORDER BY BreezecardNum ASC
-- by username
SELECT * FROM Breezecard WHERE BelongsTo = '%s' ORDER BY BreezecardNum ASC
-- by bcNum & username
SELECT * FROM Breezecard WHERE BelongsTo = '%s' AND BreezecardNum = '%s' ORDER BY BreezecardNum ASC
-- by max and min value
SELECT * FROM Breezecard WHERE '%s' <= Value AND Value <= '%s' ORDER BY BreezecardNum ASC
-- by bcNum & max and min value
SELECT * FROM Breezecard WHERE BreezecardNum = '%s' AND '%s' <= Value AND Value <= '%s' ORDER BY BreezecardNum ASC
-- by username & max and min value
SELECT * FROM Breezecard WHERE BelongsTo = '%s' AND '%s' <= Value AND Value <= '%s' ORDER BY BreezecardNum ASC
-- by bcNum & username & max and min value
SELECT * FROM Breezecard WHERE BreezecardNum = '%s' AND BelongsTo = '%s' AND '%s' <= Value AND Value <= '%s' ORDER BY BreezecardNum ASC
-- by min value
SELECT * FROM Breezecard WHERE '%s' <= Value ORDER BY BreezecardNum ASC
-- by bcNum & min value
SELECT * FROM Breezecard WHERE BreezecardNum = '%s' AND '%s' <= Value ORDER BY BreezecardNum ASC
-- by username & min value
SELECT * FROM Breezecard WHERE BelongsTo = '%s' AND '%s' <= Value ORDER BY BreezecardNum ASC
-- by bcNum & username & min value
SELECT * FROM Breezecard WHERE BreezecardNum = '%s' AND BelongsTo = '%s' AND '%s' <= Value ORDER BY BreezecardNum ASC
-- by max value
SELECT * FROM Breezecard WHERE Value <= '%s' ORDER BY BreezecardNum ASC
-- by bcNum & max value
SELECT * FROM Breezecard WHERE BreezecardNum = '%s' AND Value <= '%s' ORDER BY BreezecardNum ASC
-- by username & max value
SELECT * FROM Breezecard WHERE BelongsTo = '%s' AND Value <= '%s' ORDER BY BreezecardNum ASC
-- by bcNum & username & max value
SELECT * FROM Breezecard WHERE BreezecardNum = '%s' AND BelongsTo = '%s' AND Value <= '%s' ORDER BY BreezecardNum ASC

---
--- register user
---
INSERT INTO User(Username, Password, IsAdmin) VALUES ('%s', '%s', '%d')
INSERT INTO Passenger(Username, Email) VALUES ('%s', '%s')

---
--- delete user
---
DELETE FROM User WHERE Username = '%s'

---
--- insert breezecard
---
-- BelongsTo is None
INSERT INTO Breezecard(BreezecardNum, Value) VALUES ('%s', '%f')
--BelongsTo is not None
INSERT INTO Breezecard(BreezecardNum, Value, BelongsTO) VALUES ('%s', '%f', '%s')

---
--- update bc value
---
UPDATE Breezecard SET Value = '%f' WHERE BreezecardNum = '%s'

---
--- update bc owner
---
-- new User is NULL
UPDATE Breezecard SET BelongsTo = NULL WHERE BreezecardNum = '%s'
-- new User is not NULL
UPDATE Breezecard SET BelongsTo = '%s' WHERE BreezecardNum = '%s'

---
--- insert station
---
INSERT INTO Station(StopID, Name, EnterFare, ClosedStatus, IsTrain) VALUES ('%s', '%s', '%f', '%d', '%d')

---
--- delete station
---
DELETE FROM Station WHERE StopID = '%s'

---
--- retrieve station
---
-- stopID is None & openStatus is None
SELECT S.*, B.Intersection FROM Station S LEFT JOIN BusStationIntersection B ON S.StopID = B.StopID ORDER BY StopID
-- stopID is None & openStatus is not None
SELECT S.*, B.Intersection FROM Station S LEFT JOIN BusStationIntersection B ON S.StopID = B.StopID WHERE S.ClosedStatus = 0 ORDER BY StopID
-- stopID is not None & openStatus is None
SELECT S.*, B.Intersection FROM (Station S LEFT JOIN BusStationIntersection B ON S.StopID = B.StopID) WHERE S.StopID = '%s'
-- stopID is not None & openStatus is not None
SELECT S.*, B.Intersection FROM Station S LEFT JOIN BusStationIntersection B ON S.StopID = B.StopID WHERE S.ClosedStatus = 0 AND S.StopID = '%s'

---
--- update station fare
---
UPDATE Station SET EnterFare = '%f' WHERE StopID = '%s'

---
--- update station ClosedStatus
---
UPDATE Station SET ClosedStatus = '%d' WHERE StopID = '%s'

---
--- insert intersection
---
INSERT INTO BusStationIntersection(StopID, Intersection) VALUES ('%s', '%s')

---
--- intersection retrieve
---
SELECT * FROM BusStationIntersection WHERE StopID = '%s'

---
--- conflict insert
---
INSERT INTO Conflict(Username, BreezecardNum, DateAndTime) VALUES ('%s', '%s', '%s')

---
--- conflict detele
---
DELETE FROM Conflict WHERE Username = '%s' and BreezecardNum = '%s'

---
--- conflict retrieve
---
SELECT C.BreezecardNum, C.Username, C.DateAndTime, B.BelongsTo
FROM Conflict C LEFT JOIN Breezecard B On C.BreezecardNum = B.BreezecardNum
WHERE C.BreezecardNum = '%s' ORDER BY BreezecardNum

---
--- trip insert
---
INSERT INTO Trip(Tripfare, StartTime, BreezecardNum, StartsAt, EndsAt) VALUES ('%f', '%s', '%s', '%s', '%s')

---
--- trip update endsAt
---
UPDATE Trip SET EndsAt = '%s' WHERE StartTime = '%s' AND BreezecardNum = '%s'

---
---trip retrieve
---
SELECT * FROM Trip WHERE BreezecardNum = '%s' AND StartTime >= '%s' AND StartTime <= '%s' ORDER BY StartTime